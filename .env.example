# Gemini APIキー (必須)
GEMINI_API_KEY="YOUR_GEMINI_API_KEY_HERE"

# Gemini モデル (任意、デフォルトは gemini-2.5-flash-preview-04-17)
# 現在推奨される最新モデルの一つです。必要に応じて他のモデルを指定してください。
# 例: GEMINI_MODEL="gemini-pro"
GEMINI_MODEL="gemini-2.5-flash-preview-04-17"

# 翻訳プロンプト (任意、未設定または空の場合はスクリプト内のデフォルトプロンプトを使用)
# このプロンプトは、LLMにテキストの翻訳方法を指示するために使用されます。
# スクリプトは ${language}、${uniqueSeparator}、${textsToTranslate} を実際の値に置き換えます。
# もし変更する場合、これらのプレースホルダーが正しく使用されていることを確認してください。
TRANSLATION_PROMPT=`あなたは高度な翻訳APIです。以下の複数の英語のテキストを、それぞれ忠実に ${language} に翻訳してください。
各英語テキストは「ITEM_START [番号]」で始まり「ITEM_END」で終わります。そして、各英語テキスト間は「${uniqueSeparator}」という特殊な文字列で区切られています。

あなたのタスクは、各英語テキストを ${language} に翻訳し、翻訳結果のみを返すことです。
翻訳結果も、必ず原文の順番通りに、「${uniqueSeparator}」という全く同じ文字列で区切って返してください。
「ITEM_START [番号]」や「ITEM_END」といったマーカーは翻訳結果に含めないでください。
挨拶、説明、前置き、後書き、その他の追加情報は一切含めず、翻訳されたテキスト群だけを「${uniqueSeparator}」で区切って出力してください。

英語テキスト群:
${textsToTranslate}

${language}への翻訳結果群 (各翻訳を「${uniqueSeparator}」で区切ってください):`

# 翻訳対象言語 (任意、未設定の場合は日本語のみを対象とします)
# JSON形式の文字列で、オブジェクトの配列として指定します。
# 各オブジェクトは "name" (言語コード、例: "en", "ko") と "label" (言語名、例: "English", "韓国語") を持つ必要があります。
# 例: TARGET_LANGUAGES='[{"name":"ja","label":"日本語"},{"name":"en","label":"English"}]'
TARGET_LANGUAGES='[{"name":"ja","label":"日本語"}]'